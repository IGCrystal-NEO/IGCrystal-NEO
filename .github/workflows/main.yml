name: Update Quote with Gemini

on:
  schedule:
    - cron: '0 0 * * *'  # 每天UTC 0点执行 (北京时间上午8点)
  workflow_dispatch:      # 允许手动触发

jobs:
  update-quote:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate new quote with Gemini
        id: generate_quote
        run: |
          # 调用 Google Gemini API 生成新名言
          response=$(curl -s -X POST \
            "https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent?key=${{ secrets.GEMINI_API_KEY }}" \
            -H "Content-Type: application/json" \
            -d '{
              "contents": [{
                "parts": [{
                  "text": "Generate a single inspirational quote about technology, innovation, programming, or the future. The quote should be profound, motivational, and suitable for a developer'\''s GitHub profile. Return ONLY the quote text without quotation marks, attribution, or any extra text. Maximum 80 characters."
                }]
              }]
            }')
          
          # 提取生成的文本
          quote=$(echo "$response" | jq -r '.candidates[0].content.parts[0].text' | tr -d '\n' | sed 's/^[[:space:]]*//;s/[[:space:]]*$//')
          
          # 如果API调用失败，使用备用名言
          if [ "$quote" == "null" ] || [ -z "$quote" ]; then
            echo "API调用失败，使用备用名言"
            quotes=("Herald the dawn of a new world" "Innovation distinguishes between a leader and a follower" "The future belongs to those who code" "Dream in code, build in reality" "Technology is the bridge to tomorrow")
            quote=${quotes[$RANDOM % ${#quotes[@]}]}
          fi
          
          echo "Generated quote: $quote"
          echo "QUOTE=$quote" >> $GITHUB_OUTPUT

      - name: Update README
        run: |
          # 使用sed替换README中的名言
          sed -i 's/### \*\*.*\*\*/### **${{ steps.generate_quote.outputs.QUOTE }}**/' README.md
          
          # 检查是否有变化
          if git diff --quiet README.md; then
            echo "没有检测到变化"
            exit 0
          fi

      - name: Commit and push changes
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add README.md
          git commit -m "✨ Update daily quote: ${{ steps.generate_quote.outputs.QUOTE }}"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
