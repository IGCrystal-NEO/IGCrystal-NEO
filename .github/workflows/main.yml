name: Update README Profile

on:
  schedule:
    # 每天 UTC 时间 00:00 运行（北京时间 08:00）
    - cron: '0 0 * * *'
  workflow_dispatch: # 允许手动触发
  push:
    branches: [ main ]
    paths:
      - '.github/workflows/update-readme.yml'

jobs:
  update-readme:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Update README with latest stats
      run: |
        # 获取当前时间戳，强制刷新GitHub统计API缓存
        TIMESTAMP=$(date +%s)
        
        echo "🔄 Updating README with timestamp: $TIMESTAMP"
        
        # 检查README.md是否存在现有的时间戳参数并替换，或者添加新的
        if grep -q "&t=" README.md; then
          # 如果已存在时间戳参数，则替换它
          sed -i "s/&t=[0-9]*//g" README.md
        fi
        
        # 为GitHub统计链接添加时间戳参数
        sed -i "s|github-readme-stats\.vercel\.app/api?username=Larch-C\([^\"]*\)\"|github-readme-stats.vercel.app/api?username=Larch-C\1\&t=${TIMESTAMP}\"|g" README.md
        sed -i "s|github-readme-stats\.vercel\.app/api/top-langs/?username=Larch-C\([^\"]*\)\"|github-readme-stats.vercel.app/api/top-langs/?username=Larch-C\1\&t=${TIMESTAMP}\"|g" README.md
        
        echo "✅ README.md updated successfully"
    
    - name: Check for changes
      id: verify-changed-files
      run: |
        # 检查是否有文件被修改（排除备份文件）
        git add README.md
        if git diff --staged --quiet; then
          echo "changed=false" >> $GITHUB_OUTPUT
          echo "📝 No changes detected in README.md"
        else
          echo "changed=true" >> $GITHUB_OUTPUT
          echo "✨ Changes detected in README.md"
        fi
    
    - name: Commit and push changes
      if: steps.verify-changed-files.outputs.changed == 'true'
      run: |
        git config --local user.email "cacheigcrystal@gmail.com"
        git config --local user.name "IGCrystal-G"
        git commit -m "🤖 Auto-update GitHub stats - $(date +'%Y-%m-%d %H:%M:%S UTC')"
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Clean up untracked files
      if: always()
      run: |
        # 清理任何可能产生的备份文件
        git clean -f
