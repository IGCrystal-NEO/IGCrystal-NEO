name: Update Quote with Gemini

on:
  schedule:
    - cron: '0 0 * * *'  # 每天UTC 0点执行 (北京时间上午8点)
  workflow_dispatch:      # 允许手动触发

jobs:
  update-quote:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate new quote with Gemini
        id: generate_quote
        run: |
          # 调用 Google Gemini API 生成新名言
          response=$(curl -s -X POST \
            "https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${{ secrets.GEMINI_API_KEY }}" \
            -H "Content-Type: application/json" \
            -d '{
              "contents": [{
                "parts": [{
                  "text": "You are Maimi, a cute cat girl, 134cm tall, with silver-white fur and red pupils, willful and innocent but kind, easily shy. Please generate a short philosophical and inspirational quote about life, dreams, growth, or human nature in Mimi'\''s cute style. Use cat girl language with nya♡～ and refer to yourself as maimai. Keep it under 20 characters and make it adorable but deeply meaningful!"
                }]
              }]
            }')
          
          # 提取生成的文本
          quote=$(echo "$response" | jq -r '.candidates[0].content.parts[0].text' | tr -d '\n' | sed 's/^[[:space:]]*//;s/[[:space:]]*$//')
          
          # 如果API调用失败，使用备用名言
          if [ "$quote" == "null" ] || [ -z "$quote" ]; then
            echo "API调用失败，使用备用名言"
            quotes=("Herald the dawn of a new world")
            quote=${quotes[$RANDOM % ${#quotes[@]}]}
          fi
          
          echo "Generated quote: $quote"
          echo "QUOTE=$quote" >> $GITHUB_OUTPUT

      - name: Update README
        run: |
          # 使用sed替换README中的名言 - 修复正则表达式
          quote="${{ steps.generate_quote.outputs.QUOTE }}"
          sed -i "s/### \*\*.*\*\*/### **${quote}**/" README.md
          
          # 显示变化
          echo "=== README.md 变化 ==="
          git diff README.md || echo "没有变化"

      - name: Commit and push changes
        run: |
          # 检查是否有变化需要提交
          if git diff --quiet README.md; then
            echo "没有检测到变化，跳过提交"
          else
            git config --local user.name "IGCrystal-G"
            git config --local user.email "cacheigcrystal@gmail.com"
            git add README.md
            git commit -m "✨ Update daily quote: ${{ steps.generate_quote.outputs.QUOTE }}"
            git push
            echo "成功更新名言: ${{ steps.generate_quote.outputs.QUOTE }}"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
